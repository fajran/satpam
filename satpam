#!/bin/bash

BASE=/tmp/satpam
BACKUPDIRBASE=$BASE/var/lib/satpam
LOGDIR=$BASE/var/log/satpam

if [ $UID -ne 0 ]; then
	echo "You need root privileges to run this command."
	exit 1
fi

if [ $# -ne 2 ]; then
	echo "Usage: satpam [save|restore|check] [username]"
	exit 2
fi

mode=$1
user=$2

if [ "$mode" != "save" -a "$mode" != "restore" -a "$mode" != "check" ]; then
	echo "Usage: satpam [save|restore|check] [username]"
	exit 2
fi

HOMEDIR=$(eval echo ~$user)
BACKUPDIR=$BACKUPDIRBASE/$HOMEDIR
LOGFILE=$LOGDIR/satpam.$user.$(date +%Y%m%d.%H%M%S).log
RET=0


if [ "$mode" = "save" ]; then

	if [ ! -d $HOMEDIR ]; then
		echo "User home directory does not exist: $HOMEDIR"
		exit 3
	fi

	mkdir -p $BACKUPDIR
	mkdir -p $LOGDIR

	echo "# Mode: $mode" >> $LOGFILE
	echo "# User: $user" >> $LOGFILE
	echo "# Start: $(date -R)" >> $LOGFILE

	rsync -avH $HOMEDIR/ $BACKUPDIR/ >> $LOGFILE 2>&1
	touch $BACKUPDIR

	echo "# Finish: $(date -R)" >> $LOGFILE

	echo "Home directory of $user ($HOMEDIR) is saved."
fi

if [ "$mode" = "restore" ]; then
	if [ ! -d $BACKUPDIR ]; then
		echo "Saved home directory of $user does not exist."
		echo "Have you run \"satpam save $user\" previously?"
		exit 4
	fi

	mkdir -p $LOGDIR

	echo "Mode: $mode" >> $LOGFILE
	echo "User: $user" >> $LOGFILE
	echo "Start: $(date -R)" >> $LOGFILE

	# Copy the *directory* so if the home directory is missing
	# it will be created again and its permission/owner is also restored

	HOMEDIRCONTAINER=$(dirname $HOMEDIR)
	BACKUPDIREXACT=$(dirname $BACKUPDIR)/$(basename $BACKUPDIR)

	rsync -avH --delete-after $BACKUPDIREXACT $HOMEDIRCONTAINER/ >> $LOGFILE 2>&1

	echo "Finish: $(date -R)" >> $LOGFILE

	echo "Home directory of $user ($HOMEDIR) is restored."
fi

if [ "$mode" = "check" ]; then
	if [ ! -d $BACKUPDIR ]; then
		echo "Saved home directory of $user does not exist."
		RET=4
	else
		echo "Saved home directory of $user:"
		echo "- Time: $(stat -c %y $BACKUPDIR | awk -F'.' '{ print $1 }')"
		echo "- Size: $(du -sh $BACKUPDIR | awk '{ print $1 }')"
	fi
fi

[ -f $LOGFILE ] && gzip -9 $LOGFILE

exit $RET

